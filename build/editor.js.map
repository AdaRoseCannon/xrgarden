{"version":3,"file":"editor.js","sources":["../node_modules/three/examples/jsm/controls/TransformControls.js","../src/lib/editor.js"],"sourcesContent":["import {\n\tBoxBufferGeometry,\n\tBufferGeometry,\n\tColor,\n\tCylinderBufferGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronBufferGeometry,\n\tPlaneBufferGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereBufferGeometry,\n\tTorusBufferGeometry,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar TransformControls = function ( camera, domElement ) {\n\n\tif ( domElement === undefined ) {\n\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tdomElement = document;\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.visible = false;\n\tthis.domElement = domElement;\n\n\tvar _gizmo = new TransformControlsGizmo();\n\tthis.add( _gizmo );\n\n\tvar _plane = new TransformControlsPlane();\n\tthis.add( _plane );\n\n\tvar scope = this;\n\n\t// Define properties with getters/setter\n\t// Setting the defined property will automatically trigger change event\n\t// Defined properties are passed down to gizmo and plane\n\n\tdefineProperty( \"camera\", camera );\n\tdefineProperty( \"object\", undefined );\n\tdefineProperty( \"enabled\", true );\n\tdefineProperty( \"axis\", null );\n\tdefineProperty( \"mode\", \"translate\" );\n\tdefineProperty( \"translationSnap\", null );\n\tdefineProperty( \"rotationSnap\", null );\n\tdefineProperty( \"scaleSnap\", null );\n\tdefineProperty( \"space\", \"world\" );\n\tdefineProperty( \"size\", 1 );\n\tdefineProperty( \"dragging\", false );\n\tdefineProperty( \"showX\", true );\n\tdefineProperty( \"showY\", true );\n\tdefineProperty( \"showZ\", true );\n\n\tvar changeEvent = { type: \"change\" };\n\tvar mouseDownEvent = { type: \"mouseDown\" };\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\n\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t// Reusable utility variables\n\n\tvar raycaster = new Raycaster();\n\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\n\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\n\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\t\treturn allIntersections[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar _tempVector = new Vector3();\n\tvar _tempVector2 = new Vector3();\n\tvar _tempQuaternion = new Quaternion();\n\tvar _unit = {\n\t\tX: new Vector3( 1, 0, 0 ),\n\t\tY: new Vector3( 0, 1, 0 ),\n\t\tZ: new Vector3( 0, 0, 1 )\n\t};\n\n\tvar pointStart = new Vector3();\n\tvar pointEnd = new Vector3();\n\tvar offset = new Vector3();\n\tvar rotationAxis = new Vector3();\n\tvar startNorm = new Vector3();\n\tvar endNorm = new Vector3();\n\tvar rotationAngle = 0;\n\n\tvar cameraPosition = new Vector3();\n\tvar cameraQuaternion = new Quaternion();\n\tvar cameraScale = new Vector3();\n\n\tvar parentPosition = new Vector3();\n\tvar parentQuaternion = new Quaternion();\n\tvar parentQuaternionInv = new Quaternion();\n\tvar parentScale = new Vector3();\n\n\tvar worldPositionStart = new Vector3();\n\tvar worldQuaternionStart = new Quaternion();\n\tvar worldScaleStart = new Vector3();\n\n\tvar worldPosition = new Vector3();\n\tvar worldQuaternion = new Quaternion();\n\tvar worldQuaternionInv = new Quaternion();\n\tvar worldScale = new Vector3();\n\n\tvar eye = new Vector3();\n\n\tvar positionStart = new Vector3();\n\tvar quaternionStart = new Quaternion();\n\tvar scaleStart = new Vector3();\n\n\t// TODO: remove properties unused in plane and gizmo\n\n\tdefineProperty( \"worldPosition\", worldPosition );\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\n\tdefineProperty( \"cameraPosition\", cameraPosition );\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\n\tdefineProperty( \"pointStart\", pointStart );\n\tdefineProperty( \"pointEnd\", pointEnd );\n\tdefineProperty( \"rotationAxis\", rotationAxis );\n\tdefineProperty( \"rotationAngle\", rotationAngle );\n\tdefineProperty( \"eye\", eye );\n\n\t{\n\n\t\tdomElement.addEventListener( \"pointerdown\", onPointerDown, false );\n\t\tdomElement.addEventListener( \"pointermove\", onPointerHover, false );\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointerup\", onPointerUp, false );\n\n\t}\n\n\tthis.dispose = function () {\n\n\t\tdomElement.removeEventListener( \"pointerdown\", onPointerDown );\n\t\tdomElement.removeEventListener( \"pointermove\", onPointerHover );\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointerup\", onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t};\n\n\t// Set current object\n\tthis.attach = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t};\n\n\t// Detatch from object\n\tthis.detach = function () {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t};\n\n\t// Defined getter, setter and store for a property\n\tfunction defineProperty( propName, defaultValue ) {\n\n\t\tvar propValue = defaultValue;\n\n\t\tObject.defineProperty( scope, propName, {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\tpropValue = value;\n\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tscope[ propName ] = defaultValue;\n\t\t_plane[ propName ] = defaultValue;\n\t\t_gizmo[ propName ] = defaultValue;\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tthis.updateMatrixWorld = function () {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\n\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).inverse();\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).inverse();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\n\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n\tthis.pointerHover = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t};\n\n\tthis.pointerDown = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tvar space = this.space;\n\n\t\t\t\tif ( this.mode === 'scale' ) {\n\n\t\t\t\t\tspace = 'local';\n\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\n\n\t\t\t\t\tspace = 'world';\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\n\n\t\t\t\t\tvar snap = this.rotationSnap;\n\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\n\n\t\t\t\t}\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tpositionStart.copy( this.object.position );\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\n\t\t\t\tscaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\n\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\tmouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseDownEvent );\n\n\t\t}\n\n\t};\n\n\tthis.pointerMove = function ( pointer ) {\n\n\t\tvar axis = this.axis;\n\t\tvar mode = this.mode;\n\t\tvar object = this.object;\n\t\tvar space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\n\n\t\t\t} else {\n\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( offset ).add( positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).inverse() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\n\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( pointStart );\n\t\t\t\t_tempVector2.copy( pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\trotationAxis.copy( eye );\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\n\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\n\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\tthis.rotationAngle = rotationAngle;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( changeEvent );\n\t\tthis.dispatchEvent( objectChangeEvent );\n\n\t};\n\n\tthis.pointerUp = function ( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\tmouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t};\n\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\n\n\tfunction getPointer( event ) {\n\n\t\tif ( scope.domElement.ownerDocument.pointerLockElement ) {\n\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tvar rect = domElement.getBoundingClientRect();\n\n\t\t\treturn {\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// mouse / touch event handlers\n\n\tfunction onPointerHover( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tscope.pointerHover( getPointer( event ) );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.domElement.style.touchAction = 'none'; // disable touch scroll\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointermove\", onPointerMove, false );\n\n\t\tscope.pointerHover( getPointer( event ) );\n\t\tscope.pointerDown( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.pointerMove( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.domElement.style.touchAction = '';\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove, false );\n\n\t\tscope.pointerUp( getPointer( event ) );\n\n\t}\n\n\t// TODO: deprecate\n\n\tthis.getMode = function () {\n\n\t\treturn scope.mode;\n\n\t};\n\n\tthis.setMode = function ( mode ) {\n\n\t\tscope.mode = mode;\n\n\t};\n\n\tthis.setTranslationSnap = function ( translationSnap ) {\n\n\t\tscope.translationSnap = translationSnap;\n\n\t};\n\n\tthis.setRotationSnap = function ( rotationSnap ) {\n\n\t\tscope.rotationSnap = rotationSnap;\n\n\t};\n\n\tthis.setScaleSnap = function ( scaleSnap ) {\n\n\t\tscope.scaleSnap = scaleSnap;\n\n\t};\n\n\tthis.setSize = function ( size ) {\n\n\t\tscope.size = size;\n\n\t};\n\n\tthis.setSpace = function ( space ) {\n\n\t\tscope.space = space;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t};\n\n};\n\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControls,\n\n\tisTransformControls: true\n\n} );\n\n\nvar TransformControlsGizmo = function () {\n\n\t'use strict';\n\n\tObject3D.call( this );\n\n\tthis.type = 'TransformControlsGizmo';\n\n\t// shared materials\n\n\tvar gizmoMaterial = new MeshBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tside: DoubleSide,\n\t\tfog: false,\n\t\ttoneMapped: false\n\t} );\n\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tlinewidth: 1,\n\t\tfog: false,\n\t\ttoneMapped: false\n\t} );\n\n\t// Make unique material for each axis/color\n\n\tvar matInvisible = gizmoMaterial.clone();\n\tmatInvisible.opacity = 0.15;\n\n\tvar matHelper = gizmoMaterial.clone();\n\tmatHelper.opacity = 0.33;\n\n\tvar matRed = gizmoMaterial.clone();\n\tmatRed.color.set( 0xff0000 );\n\n\tvar matGreen = gizmoMaterial.clone();\n\tmatGreen.color.set( 0x00ff00 );\n\n\tvar matBlue = gizmoMaterial.clone();\n\tmatBlue.color.set( 0x0000ff );\n\n\tvar matWhiteTransparent = gizmoMaterial.clone();\n\tmatWhiteTransparent.opacity = 0.25;\n\n\tvar matYellowTransparent = matWhiteTransparent.clone();\n\tmatYellowTransparent.color.set( 0xffff00 );\n\n\tvar matCyanTransparent = matWhiteTransparent.clone();\n\tmatCyanTransparent.color.set( 0x00ffff );\n\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\n\tmatMagentaTransparent.color.set( 0xff00ff );\n\n\tvar matYellow = gizmoMaterial.clone();\n\tmatYellow.color.set( 0xffff00 );\n\n\tvar matLineRed = gizmoLineMaterial.clone();\n\tmatLineRed.color.set( 0xff0000 );\n\n\tvar matLineGreen = gizmoLineMaterial.clone();\n\tmatLineGreen.color.set( 0x00ff00 );\n\n\tvar matLineBlue = gizmoLineMaterial.clone();\n\tmatLineBlue.color.set( 0x0000ff );\n\n\tvar matLineCyan = gizmoLineMaterial.clone();\n\tmatLineCyan.color.set( 0x00ffff );\n\n\tvar matLineMagenta = gizmoLineMaterial.clone();\n\tmatLineMagenta.color.set( 0xff00ff );\n\n\tvar matLineYellow = gizmoLineMaterial.clone();\n\tmatLineYellow.color.set( 0xffff00 );\n\n\tvar matLineGray = gizmoLineMaterial.clone();\n\tmatLineGray.color.set( 0x787878 );\n\n\tvar matLineYellowTransparent = matLineYellow.clone();\n\tmatLineYellowTransparent.opacity = 0.25;\n\n\t// reusable geometry\n\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\n\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\n\n\tvar lineGeometry = new BufferGeometry();\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\tvar CircleGeometry = function ( radius, arc ) {\n\n\t\tvar geometry = new BufferGeometry( );\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\n\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\tvar TranslateHelperGeometry = function () {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\tvar gizmoTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t]\n\t};\n\n\tvar pickerTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t]\n\t};\n\n\tvar helperTranslate = {\n\t\tSTART: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tEND: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tDELTA: [\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar gizmoRotate = {\n\t\tX: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t]\n\t};\n\n\tvar helperRotate = {\n\t\tAXIS: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar pickerRotate = {\n\t\tX: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\n\t\t]\n\t};\n\n\tvar gizmoScale = {\n\t\tX: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar pickerScale = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar helperScale = {\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\tvar setupGizmo = function ( gizmoMap ) {\n\n\t\tvar gizmo = new Object3D();\n\n\t\tfor ( var name in gizmoMap ) {\n\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\tobject.name = name;\n\t\t\t\tobject.tag = tag;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scale ) {\n\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t\tvar tempGeometry = object.geometry.clone();\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\tgizmo.add( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn gizmo;\n\n\t};\n\n\t// Reusable utility variables\n\n\tvar tempVector = new Vector3( 0, 0, 0 );\n\tvar tempEuler = new Euler();\n\tvar alignVector = new Vector3( 0, 1, 0 );\n\tvar zeroVector = new Vector3( 0, 0, 0 );\n\tvar lookAtMatrix = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempQuaternion2 = new Quaternion();\n\tvar identityQuaternion = new Quaternion();\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\t// Gizmo creation\n\n\tthis.gizmo = {};\n\tthis.picker = {};\n\tthis.helper = {};\n\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\n\n\t// Pickers should be hidden always\n\n\tthis.picker[ \"translate\" ].visible = false;\n\tthis.picker[ \"rotate\" ].visible = false;\n\tthis.picker[ \"scale\" ].visible = false;\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\n\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\n\n\n\t\tvar handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\n\n\t\t\tvar handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tvar factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().inverse() );\n\t\t\t\t\thandle.scale.copy( tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\n\n\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\n\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\ttempQuaternion2.copy( quaternion );\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).inverse() );\n\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\thandle.material.opacity *= 0.5;\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t} else if ( this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.material.opacity *= 0.25;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControlsGizmo,\n\n\tisTransformControlsGizmo: true\n\n} );\n\n\nvar TransformControlsPlane = function () {\n\n\t'use strict';\n\n\tMesh.call( this,\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t);\n\n\tthis.type = 'TransformControlsPlane';\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\tvar tempVector = new Vector3();\n\tvar dirVector = new Vector3();\n\tvar alignVector = new Vector3();\n\tvar tempMatrix = new Matrix4();\n\tvar identityQuaternion = new Quaternion();\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\talignVector.copy( unitY );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\tdirVector.copy( unitZ );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\tdirVector.copy( unitX );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\talignVector.copy( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitY );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\tdirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: TransformControlsPlane,\n\n\tisTransformControlsPlane: true\n\n} );\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n","import { curves as initialCurveData } from \"./positions.js\";\nimport { camera, rafCallbacks, water, renderer, controls, scene } from \"./scene.js\";\nimport { models } from \"./meshes.js\";\n\nimport {\n\tVector2,\n\tRaycaster,\n\tBufferGeometry,\n\tLineLoop,\n\tLineBasicMaterial,\n\tBoxGeometry,\n\tMeshBasicMaterial,\n\tMesh,\n\tCatmullRomCurve3\n} from \"three\";\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\n\nlet mode = 'none';\nconst lilyPad1Array = [];\nconst lilyPad2Array = [];\nconst curves = [];\nlet action = false;\nlet curveAddResolutions = [];\n\nlet activeCurve;\nlet activeCurveHandle;\nconst splineHandles = [];\nconst boxGeometry = new BoxGeometry(0.1, 0.1, 0.1);\nconst boxMaterial = new MeshBasicMaterial(0x99ff99);\n\nconst modeToElementMap = {\n\titem1: lilyPad1Array,\n\titem2: lilyPad2Array,\n\tcurve: splineHandles\n};\n\nfunction makeHandle() {\n\tconst control = new TransformControls(camera, renderer.domElement);\n\tcontrol.addEventListener('dragging-changed', function (event) {\n\t\tif (control.object.curve) {\n\t\t\tcontrol.object.curve.redraw();\n\t\t}\n\t\tcontrols.enabled = ! event.value;\n\t});\n\treturn control;\n}\n\nconst raycaster = new Raycaster();\nconst mouse = new Vector2();\nconst handle = makeHandle();\n\nfunction arrayRemove(array, el) {\n\tconst index = array.indexOf(el);\n\tif (index !== -1) array.splice(index, 1);\n}\n\nfunction arrayInsertAfter(array, el, newEl) {\n\tconst index = array.indexOf(el);\n\tarray.splice(index, 0, newEl);\n}\n\nfunction drawCurve(vector3Array) {\n\tconst curveHandles = [];\n\tfor (const handlePos of vector3Array) {\n\t\tconst handle = new Mesh(boxGeometry, boxMaterial);\n\t\tsplineHandles.push(handle);\n\t\tcurveHandles.push(handle);\n\t\tscene.add(handle);\n\t\thandle.position.copy(handlePos);\n\t}\n\n\tconst curve = new CatmullRomCurve3(\n\t\tcurveHandles.map(handle => handle.position)\n\t);\n\tcurve.curveType = \"centripetal\";\n\tcurve.closed = true;\n\n\tcurves.push(curve);\n\n\tconst points = curve.getPoints(50);\n\tconst line = new LineLoop(\n\t\tnew BufferGeometry().setFromPoints(points),\n\t\tnew LineBasicMaterial({ color: 0x00ff00 })\n\t);\n\n\tcurve.redraw = function () {\n\t\tconst points = curve.getPoints(50);\n\t\tline.geometry.setFromPoints(points);\n\t}\n\n\tcurve.line = line;\n\n\tfor (const handle of curveHandles) {\n\t\thandle.curve = curve;\n\t\thandle.remove = function () {\n\t\t\tif (curve.points.length > 1) {\n\t\t\t\tarrayRemove(curve.points, handle.position);\n\t\t\t} else {\n\t\t\t\t// delete curve\n\t\t\t\tscene.remove(curve.line);\n\t\t\t\tarrayRemove(curves, curve);\n\t\t\t}\n\t\t}\n\t}\n\n\tscene.add(line);\n\n\treturn { curve, handles: curveHandles};\n}\n\n(function drawCurves() {\n\tfor (const curvePoints of initialCurveData) {\n\t\tdrawCurve(curvePoints);\n\t}\n}());\n\nwindow.overlay.insertAdjacentHTML('afterbegin', `\n\t<label><input type=\"radio\" name=\"mode\" value=\"none\" /> None</label><br />\n\t<label><input type=\"radio\" name=\"mode\" value=\"item1\" /> Place Lily Pad 1</label><br />\n\t<label><input type=\"radio\" name=\"mode\" value=\"item2\" /> Place Lily Pad 2</label><br />\n\t<label><input type=\"radio\" name=\"mode\" value=\"curve\" /> Curves</label>\n\t<section>\n\t\t<h2>Curve Actions</h2>\n\t\t<button id=\"curvecreate\">Create New Curve</button>\n\t\t<button id=\"addhandle\">Add Handle</button>\n\t\t<button id=\"curvedeletehandle\">Delete Handle</button>\n\t\t<button id=\"updatefish\">Update Fish</button>\n\t</section>\n\t<button id=\"consolelog\">Console Log Data</button>\n`);\n\nfunction addHandle(point) {\n\twindow.overlay.querySelector('[value=\"curve\"]').click();\n\tconst newHandleBox = new Mesh(boxGeometry, boxMaterial);\n\tsplineHandles.push(newHandleBox);\n\tscene.add(newHandleBox);\n\n\tconst curve = activeCurve;\n\tconst oldHandle = activeCurveHandle;\n\n\tif (point) {\n\t\tnewHandleBox.position.copy(point);\n\t} else {\n\t\tnewHandleBox.position.copy(oldHandle.position);\n\t\tnewHandleBox.position.x += 1.4 * (Math.random() - 0.5);\n\t\tnewHandleBox.position.z += 1.4 * (Math.random() - 0.5);\n\t}\n\n\tnewHandleBox.curve = curve;\n\tnewHandleBox.remove = function () {\n\t\tif (curve.points.length > 1) {\n\t\t\tarrayRemove(curve.points, handle.position);\n\t\t} else {\n\t\t\t// delete curve\n\t\t\tscene.remove(curve.line);\n\t\t\tarrayRemove(curves, curve);\n\t\t}\n\t}\n\n\tarrayInsertAfter(curve.points, oldHandle.position, newHandleBox.position);\n\tcurve.redraw();\n\n\thandle.attach(newHandleBox);\n\tscene.add(handle);\n\tactiveCurveHandle = newHandleBox;\n}\nwindow.addhandle.addEventListener('click', () => { addHandle() });\n\nwindow.consolelog.addEventListener('click', function () {\n\tconsole.log(`\n\t\tconst curveData = JSON.parse(\"${JSON.stringify(curves.map(curve => curve.points.map(p => [p.x, p.y, p.z].map(n => +n.toFixed(3)))))}\");\n\t`);\n\tconsole.log('const lilypad1Positions = ', JSON.stringify(lilyPad1Array.map(p => p.position).map(t => [+t.x.toFixed(3),+t.y.toFixed(3),+t.z.toFixed(3)])));\n\tconsole.log('const lilypad2Positions = ', JSON.stringify(lilyPad2Array.map(p => p.position).map(t => [+t.x.toFixed(3),+t.y.toFixed(3),+t.z.toFixed(3)])));\n});\n\nwindow.curvedeletehandle.addEventListener('click', function () {\n\twindow.overlay.querySelector('[value=\"curve\"]').click();\n\tactiveCurveHandle.remove();\n\tactiveCurve.redraw();\n\tactiveCurveHandle.parent.remove(activeCurveHandle);\n\tarrayRemove(splineHandles, activeCurveHandle);\n\tscene.remove(handle);\n});\n\nwindow.curvecreate.addEventListener('click', async function () {\n\twindow.overlay.querySelector('[value=\"curve\"]').click();\n\tconst points = [\n\t\tawait new Promise(resolve => curveAddResolutions.push(resolve))\n\t];\n\n\tconst { curve, handles } = drawCurve(points);\n\n\thandle.attach(handles[0]);\n\tscene.add(handle);\n\tactiveCurve = curve;\n\tactiveCurveHandle = handles[0];\n});\n\nwindow.overlay.addEventListener('change', function (e) {\n\tif (e.target.name === \"mode\") {\n\t\tmode = e.target.value;\n\t}\n});\n\nwindow.overlay.querySelector('[value=\"item1\"]').click();\n\nmodels.then(function ({ trees }) {\n\tsetTimeout(() => scene.remove(trees), 2000);\n});\n\nrafCallbacks.add(async function () {\n\tif (mode === 'none' || !action) return;\n\tconst task = action;\n\taction = false;\n\n\traycaster.setFromCamera( mouse, camera );\n\n\tif (task === \"select\") {\n\t\tconst elements = modeToElementMap[mode];\n\t\tconst intersects = raycaster.intersectObjects(elements);\n\t\tif (!intersects.length) return;\n\t\tconst target = intersects[0].object;\n\t\thandle.attach(target);\n\t\tscene.add(handle);\n\n\t\tactiveCurveHandle = false;\n\t\tif (target.curve) {\n\t\t\tactiveCurve = target.curve;\n\t\t\tactiveCurveHandle = target;\n\t\t}\n\t}\n\n\tif (mode === \"curve\" && task === \"add\") {\n\t\tconst intersects = raycaster.intersectObjects([water]);\n\t\tif (!intersects.length) return;\n\t\tintersects[0].point.y = 0;\n\n\n\t\tif (curveAddResolutions.length) {\n\t\t\tcurveAddResolutions.shift()(intersects[0].point);\n\t\t} else {\n\t\t\taddHandle(intersects[0].point);\n\t\t}\n\t}\n\n\tif (mode === \"item1\" && task === \"add\") {\n\t\tconst intersects = raycaster.intersectObjects([water]);\n\t\tif (!intersects.length) return;\n\t\tconst { lilyPad1 } = await models;\n\t\tconst newItem = lilyPad1.children[4].clone();\n\t\tnewItem.position.x = intersects[0].point.x;\n\t\tnewItem.position.z = intersects[0].point.z;\n\t\tlilyPad1Array.push(newItem);\n\t\twater.add(newItem);\n\t\thandle.attach(newItem);\n\t\tscene.add(handle);\n\t}\n\n\tif (mode === \"item2\" && task === \"add\") {\n\t\tconst intersects = raycaster.intersectObjects([water]);\n\t\tif (!intersects.length) return;\n\t\tconst { lilyPad2 } = await models;\n\t\tconst newItem = lilyPad2.children[2].clone();\n\t\tnewItem.position.x = intersects[0].point.x;\n\t\tnewItem.position.z = intersects[0].point.z;\n\t\tlilyPad2Array.push(newItem);\n\t\twater.add(newItem);\n\t\thandle.attach(newItem);\n\t\tscene.add(handle);\n\t}\n});\n\nrenderer.domElement.addEventListener('click', function (event) {\n\taction = 'select';\n\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n}, false);\n\nrenderer.domElement.addEventListener( 'dblclick', function (event) {\n\taction = 'add';\n\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n}, false );"],"names":["TransformControls","camera","domElement","undefined","console","warn","document","Object3D","call","this","visible","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","raycaster","Raycaster","intersectObjectWithRay","object","includeInvisible","allIntersections","intersectObject","i","length","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","getPointer","event","ownerDocument","pointerLockElement","x","y","button","pointer","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","onPointerHover","enabled","pointerType","pointerHover","onPointerDown","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","traverse","child","geometry","material","attach","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","inverse","sub","normalize","prototype","dragging","setFromCamera","intersect","picker","name","planeIntersect","space","snap","rotationSnap","rotation","Math","round","z","position","quaternion","scale","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","assign","create","constructor","isTransformControls","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","transparent","side","DoubleSide","fog","toneMapped","gizmoLineMaterial","LineBasicMaterial","linewidth","matInvisible","clone","opacity","matHelper","matRed","color","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","BoxBufferGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","CircleGeometry","radius","arc","vertices","push","cos","PI","sin","gizmoTranslate","Mesh","Line","XYZ","OctahedronBufferGeometry","XY","PlaneBufferGeometry","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","Matrix4","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","children","factor","handle","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","AXIS_HIDE_TRESHOLD","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","split","some","a","lerp","Color","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane","lilyPad1Array","lilyPad2Array","curves","activeCurve","activeCurveHandle","action","curveAddResolutions","splineHandles","boxGeometry","BoxGeometry","boxMaterial","modeToElementMap","item1","item2","curve","mouse","Vector2","control","renderer","redraw","controls","makeHandle","arrayRemove","array","el","index","splice","drawCurve","vector3Array","curveHandles","handlePos","scene","CatmullRomCurve3","map","curveType","closed","points","getPoints","line","LineLoop","setFromPoints","remove","addHandle","window","overlay","querySelector","click","newHandleBox","oldHandle","random","newEl","arrayInsertAfter","curvePoints","initialCurveData","insertAdjacentHTML","addhandle","consolelog","log","JSON","stringify","p","n","toFixed","t","curvedeletehandle","curvecreate","async","Promise","resolve","e","target","models","then","trees","setTimeout","rafCallbacks","task","elements","intersects","intersectObjects","water","shift","lilyPad1","newItem","lilyPad2","innerWidth","innerHeight"],"mappings":"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"}